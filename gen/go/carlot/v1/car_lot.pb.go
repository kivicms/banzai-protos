// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.2
// 	protoc        (unknown)
// source: carlot/v1/car_lot.proto

package carlotv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PhotosByLotIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` // UUID как строки
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhotosByLotIDsRequest) Reset() {
	*x = PhotosByLotIDsRequest{}
	mi := &file_carlot_v1_car_lot_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhotosByLotIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotosByLotIDsRequest) ProtoMessage() {}

func (x *PhotosByLotIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carlot_v1_car_lot_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotosByLotIDsRequest.ProtoReflect.Descriptor instead.
func (*PhotosByLotIDsRequest) Descriptor() ([]byte, []int) {
	return file_carlot_v1_car_lot_proto_rawDescGZIP(), []int{0}
}

func (x *PhotosByLotIDsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type PhotosByLotIDsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Photos        []string               `protobuf:"bytes,1,rep,name=photos,proto3" json:"photos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PhotosByLotIDsResponse) Reset() {
	*x = PhotosByLotIDsResponse{}
	mi := &file_carlot_v1_car_lot_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PhotosByLotIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PhotosByLotIDsResponse) ProtoMessage() {}

func (x *PhotosByLotIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carlot_v1_car_lot_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PhotosByLotIDsResponse.ProtoReflect.Descriptor instead.
func (*PhotosByLotIDsResponse) Descriptor() ([]byte, []int) {
	return file_carlot_v1_car_lot_proto_rawDescGZIP(), []int{1}
}

func (x *PhotosByLotIDsResponse) GetPhotos() []string {
	if x != nil {
		return x.Photos
	}
	return nil
}

type CarLotByLotIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	UserID        int64                  `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Lang          string                 `protobuf:"bytes,3,opt,name=lang,proto3" json:"lang,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarLotByLotIDRequest) Reset() {
	*x = CarLotByLotIDRequest{}
	mi := &file_carlot_v1_car_lot_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarLotByLotIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarLotByLotIDRequest) ProtoMessage() {}

func (x *CarLotByLotIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carlot_v1_car_lot_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarLotByLotIDRequest.ProtoReflect.Descriptor instead.
func (*CarLotByLotIDRequest) Descriptor() ([]byte, []int) {
	return file_carlot_v1_car_lot_proto_rawDescGZIP(), []int{2}
}

func (x *CarLotByLotIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CarLotByLotIDRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CarLotByLotIDRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type CarLotByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonData      string                 `protobuf:"bytes,1,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarLotByIDResponse) Reset() {
	*x = CarLotByIDResponse{}
	mi := &file_carlot_v1_car_lot_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarLotByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarLotByIDResponse) ProtoMessage() {}

func (x *CarLotByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carlot_v1_car_lot_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarLotByIDResponse.ProtoReflect.Descriptor instead.
func (*CarLotByIDResponse) Descriptor() ([]byte, []int) {
	return file_carlot_v1_car_lot_proto_rawDescGZIP(), []int{3}
}

func (x *CarLotByIDResponse) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

type CarLotsByLotIDsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"` // UUID как строки
	Lang          string                 `protobuf:"bytes,2,opt,name=lang,proto3" json:"lang,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarLotsByLotIDsRequest) Reset() {
	*x = CarLotsByLotIDsRequest{}
	mi := &file_carlot_v1_car_lot_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarLotsByLotIDsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarLotsByLotIDsRequest) ProtoMessage() {}

func (x *CarLotsByLotIDsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_carlot_v1_car_lot_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarLotsByLotIDsRequest.ProtoReflect.Descriptor instead.
func (*CarLotsByLotIDsRequest) Descriptor() ([]byte, []int) {
	return file_carlot_v1_car_lot_proto_rawDescGZIP(), []int{4}
}

func (x *CarLotsByLotIDsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *CarLotsByLotIDsRequest) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

type CarLotsByIDsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JsonData      string                 `protobuf:"bytes,1,opt,name=jsonData,proto3" json:"jsonData,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CarLotsByIDsResponse) Reset() {
	*x = CarLotsByIDsResponse{}
	mi := &file_carlot_v1_car_lot_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CarLotsByIDsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CarLotsByIDsResponse) ProtoMessage() {}

func (x *CarLotsByIDsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_carlot_v1_car_lot_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CarLotsByIDsResponse.ProtoReflect.Descriptor instead.
func (*CarLotsByIDsResponse) Descriptor() ([]byte, []int) {
	return file_carlot_v1_car_lot_proto_rawDescGZIP(), []int{5}
}

func (x *CarLotsByIDsResponse) GetJsonData() string {
	if x != nil {
		return x.JsonData
	}
	return ""
}

var File_carlot_v1_car_lot_proto protoreflect.FileDescriptor

var file_carlot_v1_car_lot_proto_rawDesc = []byte{
	0x0a, 0x17, 0x63, 0x61, 0x72, 0x6c, 0x6f, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x61, 0x72, 0x5f,
	0x6c, 0x6f, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x63, 0x61, 0x72, 0x6c, 0x6f,
	0x74, 0x22, 0x29, 0x0a, 0x15, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x74,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x64,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73, 0x22, 0x30, 0x0a, 0x16,
	0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x22, 0x52,
	0x0a, 0x14, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x42, 0x79, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61,
	0x6e, 0x67, 0x22, 0x30, 0x0a, 0x12, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6a, 0x73, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x3e, 0x0a, 0x16, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x73, 0x42,
	0x79, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10,
	0x0a, 0x03, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x69, 0x64, 0x73,
	0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6c, 0x61, 0x6e, 0x67, 0x22, 0x32, 0x0a, 0x14, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x73, 0x42,
	0x79, 0x49, 0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x32, 0xff, 0x01, 0x0a, 0x0d, 0x43, 0x61, 0x72,
	0x4c, 0x6f, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x49, 0x0a, 0x0d, 0x47, 0x65,
	0x74, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x63, 0x61,
	0x72, 0x6c, 0x6f, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x42, 0x79, 0x4c, 0x6f, 0x74,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x63, 0x61, 0x72, 0x6c,
	0x6f, 0x74, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x61, 0x72, 0x4c,
	0x6f, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x12, 0x1e, 0x2e, 0x63, 0x61, 0x72, 0x6c, 0x6f,
	0x74, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x74, 0x49, 0x44,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x63, 0x61, 0x72, 0x6c, 0x6f,
	0x74, 0x2e, 0x43, 0x61, 0x72, 0x4c, 0x6f, 0x74, 0x73, 0x42, 0x79, 0x49, 0x44, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x68, 0x6f,
	0x74, 0x6f, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x74, 0x49, 0x44, 0x73, 0x12, 0x1d, 0x2e, 0x63, 0x61,
	0x72, 0x6c, 0x6f, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x74,
	0x49, 0x44, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x63, 0x61, 0x72,
	0x6c, 0x6f, 0x74, 0x2e, 0x50, 0x68, 0x6f, 0x74, 0x6f, 0x73, 0x42, 0x79, 0x4c, 0x6f, 0x74, 0x49,
	0x44, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3c, 0x5a, 0x3a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x69, 0x76, 0x69, 0x63, 0x6d, 0x73,
	0x2f, 0x62, 0x61, 0x6e, 0x7a, 0x61, 0x69, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x67,
	0x65, 0x6e, 0x2f, 0x67, 0x6f, 0x2f, 0x63, 0x61, 0x72, 0x6c, 0x6f, 0x74, 0x2f, 0x76, 0x31, 0x3b,
	0x63, 0x61, 0x72, 0x6c, 0x6f, 0x74, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_carlot_v1_car_lot_proto_rawDescOnce sync.Once
	file_carlot_v1_car_lot_proto_rawDescData = file_carlot_v1_car_lot_proto_rawDesc
)

func file_carlot_v1_car_lot_proto_rawDescGZIP() []byte {
	file_carlot_v1_car_lot_proto_rawDescOnce.Do(func() {
		file_carlot_v1_car_lot_proto_rawDescData = protoimpl.X.CompressGZIP(file_carlot_v1_car_lot_proto_rawDescData)
	})
	return file_carlot_v1_car_lot_proto_rawDescData
}

var file_carlot_v1_car_lot_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_carlot_v1_car_lot_proto_goTypes = []any{
	(*PhotosByLotIDsRequest)(nil),  // 0: carlot.PhotosByLotIDsRequest
	(*PhotosByLotIDsResponse)(nil), // 1: carlot.PhotosByLotIDsResponse
	(*CarLotByLotIDRequest)(nil),   // 2: carlot.CarLotByLotIDRequest
	(*CarLotByIDResponse)(nil),     // 3: carlot.CarLotByIDResponse
	(*CarLotsByLotIDsRequest)(nil), // 4: carlot.CarLotsByLotIDsRequest
	(*CarLotsByIDsResponse)(nil),   // 5: carlot.CarLotsByIDsResponse
}
var file_carlot_v1_car_lot_proto_depIdxs = []int32{
	2, // 0: carlot.CarLotService.GetCarLotByID:input_type -> carlot.CarLotByLotIDRequest
	4, // 1: carlot.CarLotService.GetCarLotsByIDs:input_type -> carlot.CarLotsByLotIDsRequest
	0, // 2: carlot.CarLotService.GetPhotosByLotIDs:input_type -> carlot.PhotosByLotIDsRequest
	3, // 3: carlot.CarLotService.GetCarLotByID:output_type -> carlot.CarLotByIDResponse
	5, // 4: carlot.CarLotService.GetCarLotsByIDs:output_type -> carlot.CarLotsByIDsResponse
	1, // 5: carlot.CarLotService.GetPhotosByLotIDs:output_type -> carlot.PhotosByLotIDsResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_carlot_v1_car_lot_proto_init() }
func file_carlot_v1_car_lot_proto_init() {
	if File_carlot_v1_car_lot_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_carlot_v1_car_lot_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_carlot_v1_car_lot_proto_goTypes,
		DependencyIndexes: file_carlot_v1_car_lot_proto_depIdxs,
		MessageInfos:      file_carlot_v1_car_lot_proto_msgTypes,
	}.Build()
	File_carlot_v1_car_lot_proto = out.File
	file_carlot_v1_car_lot_proto_rawDesc = nil
	file_carlot_v1_car_lot_proto_goTypes = nil
	file_carlot_v1_car_lot_proto_depIdxs = nil
}
