// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.5.1
// - protoc             (unknown)
// source: demotariff/v1/demotariff.proto

package demotariffv1

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.64.0 or later.
const _ = grpc.SupportPackageIsVersion9

const (
	DemoTariffService_DecrementClosedLots_FullMethodName  = "/demotariff.DemoTariffService/DecrementClosedLots"
	DemoTariffService_DecrementClosedPages_FullMethodName = "/demotariff.DemoTariffService/DecrementClosedPages"
	DemoTariffService_DecrementTranslates_FullMethodName  = "/demotariff.DemoTariffService/DecrementTranslates"
	DemoTariffService_FinishDemoTariff_FullMethodName     = "/demotariff.DemoTariffService/FinishDemoTariff"
)

// DemoTariffServiceClient is the client API for DemoTariffService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type DemoTariffServiceClient interface {
	DecrementClosedLots(ctx context.Context, in *DecrementClosedLotsRequest, opts ...grpc.CallOption) (*DecrementClosedLotsResponse, error)
	DecrementClosedPages(ctx context.Context, in *DecrementClosedPagesRequest, opts ...grpc.CallOption) (*DecrementClosedPagesResponse, error)
	DecrementTranslates(ctx context.Context, in *DecrementTranslatesRequest, opts ...grpc.CallOption) (*DecrementTranslatesResponse, error)
	FinishDemoTariff(ctx context.Context, in *FinishDemoTariffRequest, opts ...grpc.CallOption) (*FinishDemoTariffResponse, error)
}

type demoTariffServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewDemoTariffServiceClient(cc grpc.ClientConnInterface) DemoTariffServiceClient {
	return &demoTariffServiceClient{cc}
}

func (c *demoTariffServiceClient) DecrementClosedLots(ctx context.Context, in *DecrementClosedLotsRequest, opts ...grpc.CallOption) (*DecrementClosedLotsResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DecrementClosedLotsResponse)
	err := c.cc.Invoke(ctx, DemoTariffService_DecrementClosedLots_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoTariffServiceClient) DecrementClosedPages(ctx context.Context, in *DecrementClosedPagesRequest, opts ...grpc.CallOption) (*DecrementClosedPagesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DecrementClosedPagesResponse)
	err := c.cc.Invoke(ctx, DemoTariffService_DecrementClosedPages_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoTariffServiceClient) DecrementTranslates(ctx context.Context, in *DecrementTranslatesRequest, opts ...grpc.CallOption) (*DecrementTranslatesResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(DecrementTranslatesResponse)
	err := c.cc.Invoke(ctx, DemoTariffService_DecrementTranslates_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *demoTariffServiceClient) FinishDemoTariff(ctx context.Context, in *FinishDemoTariffRequest, opts ...grpc.CallOption) (*FinishDemoTariffResponse, error) {
	cOpts := append([]grpc.CallOption{grpc.StaticMethod()}, opts...)
	out := new(FinishDemoTariffResponse)
	err := c.cc.Invoke(ctx, DemoTariffService_FinishDemoTariff_FullMethodName, in, out, cOpts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DemoTariffServiceServer is the server API for DemoTariffService service.
// All implementations must embed UnimplementedDemoTariffServiceServer
// for forward compatibility.
type DemoTariffServiceServer interface {
	DecrementClosedLots(context.Context, *DecrementClosedLotsRequest) (*DecrementClosedLotsResponse, error)
	DecrementClosedPages(context.Context, *DecrementClosedPagesRequest) (*DecrementClosedPagesResponse, error)
	DecrementTranslates(context.Context, *DecrementTranslatesRequest) (*DecrementTranslatesResponse, error)
	FinishDemoTariff(context.Context, *FinishDemoTariffRequest) (*FinishDemoTariffResponse, error)
	mustEmbedUnimplementedDemoTariffServiceServer()
}

// UnimplementedDemoTariffServiceServer must be embedded to have
// forward compatible implementations.
//
// NOTE: this should be embedded by value instead of pointer to avoid a nil
// pointer dereference when methods are called.
type UnimplementedDemoTariffServiceServer struct{}

func (UnimplementedDemoTariffServiceServer) DecrementClosedLots(context.Context, *DecrementClosedLotsRequest) (*DecrementClosedLotsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecrementClosedLots not implemented")
}
func (UnimplementedDemoTariffServiceServer) DecrementClosedPages(context.Context, *DecrementClosedPagesRequest) (*DecrementClosedPagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecrementClosedPages not implemented")
}
func (UnimplementedDemoTariffServiceServer) DecrementTranslates(context.Context, *DecrementTranslatesRequest) (*DecrementTranslatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecrementTranslates not implemented")
}
func (UnimplementedDemoTariffServiceServer) FinishDemoTariff(context.Context, *FinishDemoTariffRequest) (*FinishDemoTariffResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FinishDemoTariff not implemented")
}
func (UnimplementedDemoTariffServiceServer) mustEmbedUnimplementedDemoTariffServiceServer() {}
func (UnimplementedDemoTariffServiceServer) testEmbeddedByValue()                           {}

// UnsafeDemoTariffServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to DemoTariffServiceServer will
// result in compilation errors.
type UnsafeDemoTariffServiceServer interface {
	mustEmbedUnimplementedDemoTariffServiceServer()
}

func RegisterDemoTariffServiceServer(s grpc.ServiceRegistrar, srv DemoTariffServiceServer) {
	// If the following call pancis, it indicates UnimplementedDemoTariffServiceServer was
	// embedded by pointer and is nil.  This will cause panics if an
	// unimplemented method is ever invoked, so we test this at initialization
	// time to prevent it from happening at runtime later due to I/O.
	if t, ok := srv.(interface{ testEmbeddedByValue() }); ok {
		t.testEmbeddedByValue()
	}
	s.RegisterService(&DemoTariffService_ServiceDesc, srv)
}

func _DemoTariffService_DecrementClosedLots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecrementClosedLotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoTariffServiceServer).DecrementClosedLots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DemoTariffService_DecrementClosedLots_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoTariffServiceServer).DecrementClosedLots(ctx, req.(*DecrementClosedLotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoTariffService_DecrementClosedPages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecrementClosedPagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoTariffServiceServer).DecrementClosedPages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DemoTariffService_DecrementClosedPages_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoTariffServiceServer).DecrementClosedPages(ctx, req.(*DecrementClosedPagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoTariffService_DecrementTranslates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecrementTranslatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoTariffServiceServer).DecrementTranslates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DemoTariffService_DecrementTranslates_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoTariffServiceServer).DecrementTranslates(ctx, req.(*DecrementTranslatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _DemoTariffService_FinishDemoTariff_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FinishDemoTariffRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DemoTariffServiceServer).FinishDemoTariff(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: DemoTariffService_FinishDemoTariff_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DemoTariffServiceServer).FinishDemoTariff(ctx, req.(*FinishDemoTariffRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// DemoTariffService_ServiceDesc is the grpc.ServiceDesc for DemoTariffService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var DemoTariffService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "demotariff.DemoTariffService",
	HandlerType: (*DemoTariffServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "DecrementClosedLots",
			Handler:    _DemoTariffService_DecrementClosedLots_Handler,
		},
		{
			MethodName: "DecrementClosedPages",
			Handler:    _DemoTariffService_DecrementClosedPages_Handler,
		},
		{
			MethodName: "DecrementTranslates",
			Handler:    _DemoTariffService_DecrementTranslates_Handler,
		},
		{
			MethodName: "FinishDemoTariff",
			Handler:    _DemoTariffService_FinishDemoTariff_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "demotariff/v1/demotariff.proto",
}
